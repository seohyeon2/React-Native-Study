{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\haege\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uB9AC\\uC561\\uD2B8\\uB124\\uC774\\uD2F0\\uBE0C\\\\React-Native-Study\\\\LottoGenerator\\\\App.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  font-size: 20px;\\n  font-weight: bold;\\n  color: #000000;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 25px;\\n  background: \", \";\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  margin-bottom: 24px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  justify-content: center;\\n  align-items: center;\\n  padding-top: \", \"px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Constants from 'expo-constants';\nimport _ from 'lodash';\nimport styled from 'styled-components/native';\nvar numbers = [];\n\n_.times(45, function (n) {\n  return numbers.push(n + 1);\n});\n\nvar Container = styled.SafeAreaView(_templateObject(), Constants.statusBarHeight);\nvar Row = styled.View(_templateObject2());\nvar Ball = styled.View(_templateObject3(), function (props) {\n  if (props.value < 11) {\n    return '#e5e251';\n  } else if (props.value < 21) {\n    return '#517FE5';\n  } else if (props.value < 31) {\n    return '#E54036';\n  } else if (props.value < 41) {\n    return '#e5e5e5';\n  } else {\n    return '#43BF74';\n  }\n});\nvar Label = styled.Text(_templateObject4());\nexport default function App() {\n  var _React$useState = React.useState(_.shuffle(numbers)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      displayNumbers = _React$useState2[0],\n      setNumbers = _React$useState2[1];\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(Ball, {\n    value: displayNumbers[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, displayNumbers[0])), React.createElement(Ball, {\n    value: displayNumbers[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, displayNumbers[1])), React.createElement(Ball, {\n    value: displayNumbers[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, displayNumbers[2])), React.createElement(Ball, {\n    value: displayNumbers[3],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, displayNumbers[3])), React.createElement(Ball, {\n    value: displayNumbers[4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, displayNumbers[4])), React.createElement(Ball, {\n    value: displayNumbers[5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, displayNumbers[5]))), React.createElement(Button, {\n    title: \"\\uB2E4\\uC2DC \\uBF51\\uAE30\",\n    onPress: function onPress() {\n      return setNumbers(_.shuffle(numbers));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  row: {\n    flexDirection: 'row',\n    marginBottom: 24\n  },\n  ball: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#e5e5e5',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 20,\n    color: '#000000',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/haege/OneDrive/바탕 화면/리액트네이티브/React-Native-Study/LottoGenerator/App.js"],"names":["React","Constants","_","styled","numbers","times","n","push","Container","SafeAreaView","statusBarHeight","Row","View","Ball","props","value","Label","Text","App","useState","shuffle","displayNumbers","setNumbers","styles","StyleSheet","create","container","flex","paddingTop","justifyContent","alignItems","row","flexDirection","marginBottom","ball","width","height","borderRadius","backgroundColor","text","fontSize","color","fontWeight"],"mappings":"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","sourcesContent":["/*\n\n<오늘 배운 것들 및 참고사항>\n\n- => : mdn arrow function (화살표 함수 참고)\n- styled components 함수 참고\n- mdn template literals 참고\n\n*/\n\n\nimport * as React from 'react';\nimport { Button, Dimensions, SafeAreaView, Text, View, StyleSheet } from 'react-native';\nimport Constants from 'expo-constants';\nimport _ from 'lodash';\nimport styled from 'styled-components/native';\n\nlet numbers = [];\n// 1부터 45의 숫자를 생성\n_.times( 45, n => numbers.push( n + 1 ) );\n// 섞는다\n// numbers = _.shuffle( numbers );\n\nconst Container = styled.SafeAreaView`\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  padding-top: ${ Constants.statusBarHeight }px;\n`;\n\nconst Row = styled.View`\n  flex-direction: row;\n  margin-bottom: 24px;\n`;\n\nconst Ball = styled.View`\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n  background: ${ props => {\n    if( props.value < 11 ) {\n      return '#e5e251';\n    }\n    else if( props.value < 21 ) {\n      return '#517FE5';\n    }\n    else if( props.value < 31  ) {\n      return '#E54036';\n    }\n    else if( props.value < 41  ) {\n      return '#e5e5e5';\n    }\n    else {\n      return '#43BF74';\n    }\n  } };\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Label = styled.Text`\n  font-size: 20px;\n  font-weight: bold;\n  color: #000000;\n`;\n\nexport default function App() {\n  // 상태 변화 state\n  const [ displayNumbers, setNumbers ] = React.useState( _.shuffle( numbers ) ); // Hook\n  // displayNumbers - 상태의 읽기 전용 값\n  // setNumbers - 상태를 변경하기 위한 업데이트 함수\n  // React.Fragment 실제 렌더링에 반영되지 않는 추상 컨테이너\n  return (\n    <Container>\n      <Row>\n        <Ball value={ displayNumbers[ 0 ] }>\n          <Label>{ displayNumbers[ 0 ] }</Label>\n        </Ball>\n        <Ball value={ displayNumbers[ 1 ] }>\n          <Label>{ displayNumbers[ 1 ] }</Label>\n        </Ball>\n        <Ball value={ displayNumbers[ 2 ] }>\n          <Label>{ displayNumbers[ 2 ] }</Label>\n        </Ball>\n        <Ball value={ displayNumbers[ 3 ] }>\n          <Label>{ displayNumbers[ 3 ] }</Label>\n        </Ball>\n        <Ball value={ displayNumbers[ 4 ] }>\n          <Label>{ displayNumbers[ 4 ] }</Label>\n        </Ball>\n        <Ball value={ displayNumbers[ 5 ] }>\n          <Label>{ displayNumbers[ 5 ] }</Label>\n        </Ball>\n      </Row>\n      <Button title=\"다시 뽑기\" onPress={ () => setNumbers( _.shuffle( numbers ) ) }/>\n    </Container>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n    marginBottom: 24,\n  },\n  ball: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#e5e5e5',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    fontSize: 20,\n    color: '#000000',\n    fontWeight: 'bold',\n  },\n});\n\n\n/*\n\nStyleSheet 사용 시\n\nSafeAreaView style={styles.container}>\n<View style={styles.row}>\n  <View style={styles.ball}>\n    <Label>{ displayNumbers[0] }</Label>\n  </View>\n  <View style={styles.ball}>\n    <Label>{ displayNumbers[1] }</Label>\n  </View>\n  <View style={styles.ball}>\n    <Label>{ displayNumbers[2] }</Label>\n  </View>\n  <View style={styles.ball}>\n    <Label>{ displayNumbers[3] }</Label>\n  </View>\n  <View style={styles.ball}>\n    <Label>{ displayNumbers[4] }</Label>\n  </View>\n  <View style={styles.ball}>\n    <Label>{ displayNumbers[5] }</Label>\n  </View>\n</View> \n<Button title=\"다시 뽑기\" onPress={ () => setNumbers(_.shuffle(numbers) ) } /> \n</SafeAreaView>\n\n\n직접 색깔 넣어줄 시\n<Ball color= {'#cc0000'} >\n\n*/"]},"metadata":{},"sourceType":"module"}